export const soulShardTokenABI = [ { type: 'constructor', inputs: [], stateMutability: 'nonpayable' }, { type: 'function', name: 'allowance', inputs: [ { name: 'owner', type: 'address' }, { name: 'spender', type: 'address' } ], outputs: [ { name: '', type: 'uint256' } ], stateMutability: 'view' }, { type: 'function', name: 'approve', inputs: [ { name: 'spender', type: 'address' }, { name: 'amount', type: 'uint256' } ], outputs: [ { name: '', type: 'bool' } ], stateMutability: 'nonpayable' }, { type: 'function', name: 'balanceOf', inputs: [ { name: 'account', type: 'address' } ], outputs: [ { name: '', type: 'uint256' } ], stateMutability: 'view' }, { type: 'function', name: 'decimals', inputs: [], outputs: [ { name: '', type: 'uint8' } ], stateMutability: 'view' }, { type: 'function', name: 'name', inputs: [], outputs: [ { name: '', type: 'string' } ], stateMutability: 'view' }, { type: 'function', name: 'symbol', inputs: [], outputs: [ { name: '', type: 'string' } ], stateMutability: 'view' }, { type: 'function', name: 'totalSupply', inputs: [], outputs: [ { name: '', type: 'uint256' } ], stateMutability: 'view' }, { type: 'function', name: 'transfer', inputs: [ { name: 'to', type: 'address' }, { name: 'amount', type: 'uint256' } ], outputs: [ { name: '', type: 'bool' } ], stateMutability: 'nonpayable' }, { type: 'function', name: 'transferFrom', inputs: [ { name: 'from', type: 'address' }, { name: 'to', type: 'address' }, { name: 'amount', type: 'uint256' } ], outputs: [ { name: '', type: 'bool' } ], stateMutability: 'nonpayable' }, { type: 'event', name: 'Approval', inputs: [ { name: 'owner', type: 'address', indexed: true }, { name: 'spender', type: 'address', indexed: true }, { name: 'value', type: 'uint256', indexed: false } ], anonymous: false }, { type: 'event', name: 'Transfer', inputs: [ { name: 'from', type: 'address', indexed: true }, { name: 'to', type: 'address', indexed: true }, { name: 'value', type: 'uint256', indexed: false } ], anonymous: false } ] as const;

export const heroABI = [ { type: 'constructor', inputs: [ { name: '_vrfWrapper', type: 'address' }, { name: '_soulShardTokenAddress', type: 'address' }, { name: '_usdTokenAddress', type: 'address' }, { name: '_pairAddress', type: 'address' } ], stateMutability: 'nonpayable' }, { type: 'receive', stateMutability: 'payable' }, { type: 'function', name: 'adminMint', inputs: [ { name: '_to', type: 'address' }, { name: '_rarity', type: 'uint8' }, { name: '_power', type: 'uint256' } ], outputs: [], stateMutability: 'nonpayable' }, { type: 'function', name: 'approve', inputs: [ { name: 'to', type: 'address' }, { name: 'tokenId', type: 'uint256' } ], outputs: [], stateMutability: 'payable' }, { type: 'function', name: 'balanceOf', inputs: [ { name: 'owner', type: 'address' } ], outputs: [ { name: '', type: 'uint256' } ], stateMutability: 'view' }, { type: 'function', name: 'fulfillRandomWords', inputs: [ { name: '_requestId', type: 'uint256' }, { name: '_randomWords', type: 'uint256[]' } ], outputs: [], stateMutability: 'nonpayable' }, { type: 'function', name: 'getApproved', inputs: [ { name: 'tokenId', type: 'uint256' } ], outputs: [ { name: '', type: 'address' } ], stateMutability: 'view' }, { type: 'function', name: 'getHeroProperties', inputs: [ { name: '_tokenId', type: 'uint256' } ], outputs: [ { name: '', type: 'tuple', components: [ { name: 'rarity', type: 'uint8' }, { name: 'power', type: 'uint256' } ] } ], stateMutability: 'view' }, { type: 'function', name: 'getSoulShardAmountForUSD', inputs: [ { name: '_amountUSD', type: 'uint256' } ], outputs: [ { name: '', type: 'uint256' } ], stateMutability: 'view' }, { type: 'function', name: 'heroProperties', inputs: [ { name: '', type: 'uint256' } ], outputs: [ { name: 'rarity', type: 'uint8' }, { name: 'power', type: 'uint256' } ], stateMutability: 'view' }, { type: 'function', name: 'isApprovedForAll', inputs: [ { name: 'owner', type: 'address' }, { name: 'operator', type: 'address' } ], outputs: [ { name: '', type: 'bool' } ], stateMutability: 'view' }, { type: 'function', name: 'mintPriceUSD', inputs: [], outputs: [ { name: '', type: 'uint256' } ], stateMutability: 'view' }, { type: 'function', name: 'name', inputs: [], outputs: [ { name: '', type: 'string' } ], stateMutability: 'view' }, { type: 'function', name: 'owner', inputs: [], outputs: [ { name: '', type: 'address' } ], stateMutability: 'view' }, { type: 'function', name: 'ownerOf', inputs: [ { name: 'tokenId', type: 'uint256' } ], outputs: [ { name: '', type: 'address' } ], stateMutability: 'view' }, { type: 'function', name: 'renounceOwnership', inputs: [], outputs: [], stateMutability: 'nonpayable' }, { type: 'function', name: 'requestNewHero', inputs: [], outputs: [ { name: 'requestId', type: 'uint256' } ], stateMutability: 'payable' }, { type: 'function', name: 's_requests', inputs: [ { name: '', type: 'uint256' } ], outputs: [ { name: 'requester', type: 'address' }, { name: 'fulfilled', type: 'bool' } ], stateMutability: 'view' }, { type: 'function', name: 'safeTransferFrom', inputs: [ { name: 'from', type: 'address' }, { name: 'to', type: 'address' }, { name: 'tokenId', type: 'uint256' } ], outputs: [], stateMutability: 'payable' }, { type: 'function', name: 'safeTransferFrom', inputs: [ { name: 'from', type: 'address' }, { name: 'to', type: 'address' }, { name: 'tokenId', type: 'uint256' }, { name: 'data', type: 'bytes' } ], outputs: [], stateMutability: 'payable' }, { type: 'function', name: 'setApprovalForAll', inputs: [ { name: 'operator', type: 'address' }, { name: 'approved', type: 'bool' } ], outputs: [], stateMutability: 'nonpayable' }, { type: 'function', name: 'setBaseURI', inputs: [ { name: 'newBaseURI', type: 'string' } ], outputs: [], stateMutability: 'nonpayable' }, { type: 'function', name: 'setMintPriceUSD', inputs: [ { name: '_newMintPriceUSD', type: 'uint256' } ], outputs: [], stateMutability: 'nonpayable' }, { type: 'function', name: 'supportsInterface', inputs: [ { name: 'interfaceId', type: 'bytes4' } ], outputs: [ { name: '', type: 'bool' } ], stateMutability: 'view' }, { type: 'function', name: 'symbol', inputs: [], outputs: [ { name: '', type: 'string' } ], stateMutability: 'view' }, { type: 'function', name: 'tokenURI', inputs: [ { name: 'tokenId', type: 'uint256' } ], outputs: [ { name: '', type: 'string' } ], stateMutability: 'view' }, { type: 'function', name: 'transferFrom', inputs: [ { name: 'from', type: 'address' }, { name: 'to', type: 'address' }, { name: 'tokenId', type: 'uint256' } ], outputs: [], stateMutability: 'payable' }, { type: 'function', name: 'transferOwnership', inputs: [ { name: 'newOwner', type: 'address' } ], outputs: [], stateMutability: 'nonpayable' }, { type: 'event', name: 'AdminHeroMinted', inputs: [ { name: 'to', type: 'address', indexed: true }, { name: 'tokenId', type: 'uint256', indexed: true }, { name: 'rarity', type: 'uint8', indexed: false }, { name: 'power', type: 'uint256', indexed: false } ], anonymous: false }, { type: 'event', name: 'Approval', inputs: [ { name: 'owner', type: 'address', indexed: true }, { name: 'approved', type: 'address', indexed: true }, { name: 'tokenId', type: 'uint256', indexed: true } ], anonymous: false }, { type: 'event', name: 'ApprovalForAll', inputs: [ { name: 'owner', type: 'address', indexed: true }, { name: 'operator', type: 'address', indexed: true }, { name: 'approved', type: 'bool', indexed: false } ], anonymous: false }, { type: 'event', name: 'HeroMinted', inputs: [ { name: 'requestId', type: 'uint256', indexed: true }, { name: 'tokenId', type: 'uint256', indexed: true }, { name: 'rarity', type: 'uint8', indexed: false }, { name: 'power', type: 'uint256', indexed: false } ], anonymous: false }, { type: 'event', name: 'HeroRequested', inputs: [ { name: 'requestId', type: 'uint256', indexed: true }, { name: 'requester', type: 'address', indexed: true } ], anonymous: false }, { type: 'event', name: 'OwnershipTransferred', inputs: [ { name: 'previousOwner', type: 'address', indexed: true }, { name: 'newOwner', type: 'address', indexed: true } ], anonymous: false }, { type: 'event', name: 'Transfer', inputs: [ { name: 'from', type: 'address', indexed: true }, { name: 'to', type: 'address', indexed: true }, { name: 'tokenId', type: 'uint256', indexed: true } ], anonymous: false } ] as const;
export const relicABI = [ { type: 'constructor', inputs: [ { name: '_vrfWrapper', type: 'address' }, { name: '_soulShardTokenAddress', type: 'address' }, { name: '_usdTokenAddress', type: 'address' }, { name: '_pairAddress', type: 'address' } ], stateMutability: 'nonpayable' }, { type: 'receive', stateMutability: 'payable' }, { type: 'function', name: 'adminMint', inputs: [ { name: '_to', type: 'address' }, { name: '_rarity', type: 'uint8' }, { name: '_capacity', type: 'uint8' } ], outputs: [], stateMutability: 'nonpayable' }, { type: 'function', name: 'approve', inputs: [ { name: 'to', type: 'address' }, { name: 'tokenId', type: 'uint256' } ], outputs: [], stateMutability: 'payable' }, { type: 'function', name: 'balanceOf', inputs: [ { name: 'owner', type: 'address' } ], outputs: [ { name: '', type: 'uint256' } ], stateMutability: 'view' }, { type: 'function', name: 'fulfillRandomWords', inputs: [ { name: '_requestId', type: 'uint256' }, { name: '_randomWords', type: 'uint256[]' } ], outputs: [], stateMutability: 'nonpayable' }, { type: 'function', name: 'getApproved', inputs: [ { name: 'tokenId', type: 'uint256' } ], outputs: [ { name: '', type: 'address' } ], stateMutability: 'view' }, { type: 'function', name: 'getRelicProperties', inputs: [ { name: '_tokenId', type: 'uint256' } ], outputs: [ { name: '', type: 'tuple', components: [ { name: 'rarity', type: 'uint8' }, { name: 'capacity', type: 'uint8' } ] } ], stateMutability: 'view' }, { type: 'function', name: 'getSoulShardAmountForUSD', inputs: [ { name: '_amountUSD', type: 'uint256' } ], outputs: [ { name: '', type: 'uint256' } ], stateMutability: 'view' }, { type: 'function', name: 'isApprovedForAll', inputs: [ { name: 'owner', type: 'address' }, { name: 'operator', type: 'address' } ], outputs: [ { name: '', type: 'bool' } ], stateMutability: 'view' }, { type: 'function', name: 'mintPriceUSD', inputs: [], outputs: [ { name: '', type: 'uint256' } ], stateMutability: 'view' }, { type: 'function', name: 'name', inputs: [], outputs: [ { name: '', type: 'string' } ], stateMutability: 'view' }, { type: 'function', name: 'owner', inputs: [], outputs: [ { name: '', type: 'address' } ], stateMutability: 'view' }, { type: 'function', name: 'ownerOf', inputs: [ { name: 'tokenId', type: 'uint256' } ], outputs: [ { name: '', type: 'address' } ], stateMutability: 'view' }, { type: 'function', name: 'relicProperties', inputs: [ { name: '', type: 'uint256' } ], outputs: [ { name: 'rarity', type: 'uint8' }, { name: 'capacity', type: 'uint8' } ], stateMutability: 'view' }, { type: 'function', name: 'renounceOwnership', inputs: [], outputs: [], stateMutability: 'nonpayable' }, { type: 'function', name: 'requestNewRelic', inputs: [], outputs: [ { name: 'requestId', type: 'uint256' } ], stateMutability: 'payable' }, { type: 'function', name: 's_requests', inputs: [ { name: '', type: 'uint256' } ], outputs: [ { name: 'requester', type: 'address' }, { name: 'fulfilled', type: 'bool' } ], stateMutability: 'view' }, { type: 'function', name: 'safeTransferFrom', inputs: [ { name: 'from', type: 'address' }, { name: 'to', type: 'address' }, { name: 'tokenId', type: 'uint256' } ], outputs: [], stateMutability: 'payable' }, { type: 'function', name: 'safeTransferFrom', inputs: [ { name: 'from', type: 'address' }, { name: 'to', type: 'address' }, { name: 'tokenId', type: 'uint256' }, { name: 'data', type: 'bytes' } ], outputs: [], stateMutability: 'payable' }, { type: 'function', name: 'setApprovalForAll', inputs: [ { name: 'operator', type: 'address' }, { name: 'approved', type: 'bool' } ], outputs: [], stateMutability: 'nonpayable' }, { type: 'function', name: 'setBaseURI', inputs: [ { name: 'newBaseURI', type: 'string' } ], outputs: [], stateMutability: 'nonpayable' }, { type: 'function', name: 'setMintPriceUSD', inputs: [ { name: '_newMintPriceUSD', type: 'uint256' } ], outputs: [], stateMutability: 'nonpayable' }, { type: 'function', 'name': 'supportsInterface', inputs: [ { name: 'interfaceId', type: 'bytes4' } ], outputs: [ { name: '', type: 'bool' } ], stateMutability: 'view' }, { type: 'function', name: 'symbol', inputs: [], outputs: [ { name: '', type: 'string' } ], stateMutability: 'view' }, { type: 'function', name: 'tokenURI', inputs: [ { name: 'tokenId', type: 'uint256' } ], outputs: [ { name: '', type: 'string' } ], stateMutability: 'view' }, { type: 'function', name: 'transferFrom', inputs: [ { name: 'from', type: 'address' }, { name: 'to', type: 'address' }, { name: 'tokenId', type: 'uint256' } ], outputs: [], stateMutability: 'payable' }, { type: 'function', name: 'transferOwnership', inputs: [ { name: 'newOwner', type: 'address' } ], outputs: [], stateMutability: 'nonpayable' }, { type: 'event', name: 'AdminRelicMinted', inputs: [ { name: 'to', type: 'address', indexed: true }, { name: 'tokenId', type: 'uint256', indexed: true }, { name: 'rarity', type: 'uint8', indexed: false }, { name: 'capacity', type: 'uint8', indexed: false } ], anonymous: false }, { type: 'event', name: 'Approval', inputs: [ { name: 'owner', type: 'address', indexed: true }, { name: 'approved', type: 'address', indexed: true }, { name: 'tokenId', type: 'uint256', indexed: true } ], anonymous: false }, { type: 'event', name: 'ApprovalForAll', inputs: [ { name: 'owner', type: 'address', indexed: true }, { name: 'operator', type: 'address', indexed: true }, { name: 'approved', type: 'bool', indexed: false } ], anonymous: false }, { type: 'event', name: 'OwnershipTransferred', inputs: [ { name: 'previousOwner', type: 'address', indexed: true }, { name: 'newOwner', type: 'address', indexed: true } ], anonymous: false }, { type: 'event', name: 'RelicMinted', inputs: [ { name: 'requestId', type: 'uint256', indexed: true }, { name: 'tokenId', type: 'uint256', indexed: true }, { name: 'rarity', type: 'uint8', indexed: false }, { name: 'capacity', type: 'uint8', indexed: false } ], anonymous: false }, { type: 'event', name: 'RelicRequested', inputs: [ { name: 'requestId', type: 'uint256', indexed: true }, { name: 'requester', type: 'address', indexed: true } ], anonymous: false }, { type: 'event', name: 'Transfer', inputs: [ { name: 'from', type: 'address', indexed: true }, { name: 'to', type: 'address', indexed: true }, { name: 'tokenId', type: 'uint256', indexed: true } ], anonymous: false } ] as const;
export const partyABI = [ { type: 'constructor', inputs: [ { name: '_heroAddress', type: 'address' }, { name: '_relicAddress', type: 'address' } ], stateMutability: 'nonpayable' }, { type: 'function', name: 'approve', inputs: [ { name: 'to', type: 'address' }, { name: 'tokenId', type: 'uint256' } ], outputs: [], stateMutability: 'payable' }, { type: 'function', name: 'balanceOf', inputs: [ { name: 'owner', type: 'address' } ], outputs: [ { name: '', type: 'uint256' } ], stateMutability: 'view' }, { type: 'function', name: 'createParty', inputs: [ { name: '_heroIds', type: 'uint256[]' }, { name: '_relicIds', type: 'uint256[]' } ], outputs: [ { name: 'partyId', type: 'uint256' } ], stateMutability: 'nonpayable' }, { type: 'function', name: 'disbandParty', inputs: [ { name: '_partyId', type: 'uint256' } ], outputs: [], stateMutability: 'nonpayable' }, { type: 'function', name: 'getApproved', inputs: [ { name: 'tokenId', type: 'uint256' } ], outputs: [ { name: '', type: 'address' } ], stateMutability: 'view' }, { type: 'function', name: 'getPartyComposition', inputs: [ { name: '_partyId', type: 'uint256' } ], outputs: [ { name: '', type: 'tuple', components: [ { name: 'heroIds', type: 'uint256[]' }, { name: 'relicIds', type: 'uint256[]' }, { name: 'totalPower', type: 'uint256' }, { name: 'totalCapacity', type: 'uint256' } ] } ], stateMutability: 'view' }, { type: 'function', name: 'isApprovedForAll', inputs: [ { name: 'owner', type: 'address' }, { name: 'operator', type: 'address' } ], outputs: [ { name: '', type: 'bool' } ], stateMutability: 'view' }, { type: 'function', name: 'name', inputs: [], outputs: [ { name: '', type: 'string' } ], stateMutability: 'view' }, { type: 'function', name: 'owner', inputs: [], outputs: [ { name: '', type: 'address' } ], stateMutability: 'view' }, { type: 'function', name: 'ownerOf', inputs: [ { name: 'tokenId', type: 'uint256' } ], outputs: [ { name: '', type: 'address' } ], stateMutability: 'view' }, { type: 'function', name: 'renounceOwnership', inputs: [], outputs: [], stateMutability: 'nonpayable' }, { type: 'function', name: 'safeTransferFrom', inputs: [ { name: 'from', type: 'address' }, { name: 'to', type: 'address' }, { name: 'tokenId', type: 'uint256' } ], outputs: [], stateMutability: 'payable' }, { type: 'function', name: 'safeTransferFrom', inputs: [ { name: 'from', type: 'address' }, { name: 'to', type: 'address' }, { name: 'tokenId', type: 'uint256' }, { name: 'data', type: 'bytes' } ], outputs: [], stateMutability: 'payable' }, { type: 'function', name: 'setApprovalForAll', inputs: [ { name: 'operator', type: 'address' }, { name: 'approved', type: 'bool' } ], outputs: [], stateMutability: 'nonpayable' }, { type: 'function', name: 'setBaseURI', inputs: [ { name: 'newBaseURI', type: 'string' } ], outputs: [], stateMutability: 'nonpayable' }, { type: 'function', name: 'setDungeonCoreAddress', inputs: [ { name: '_newAddress', type: 'address' } ], outputs: [], stateMutability: 'nonpayable' }, { type: 'function', name: 'supportsInterface', inputs: [ { name: 'interfaceId', type: 'bytes4' } ], outputs: [ { name: '', type: 'bool' } ], stateMutability: 'view' }, { type: 'function', name: 'symbol', inputs: [], outputs: [ { name: '', type: 'string' } ], stateMutability: 'view' }, { type: 'function', name: 'tokenURI', inputs: [ { name: 'tokenId', type: 'uint256' } ], outputs: [ { name: '', type: 'string' } ], stateMutability: 'view' }, { type: 'function', name: 'transferFrom', inputs: [ { name: 'from', type: 'address' }, { name: 'to', type: 'address' }, { name: 'tokenId', type: 'uint256' } ], outputs: [], stateMutability: 'payable' }, { type: 'function', name: 'transferOwnership', inputs: [ { name: 'newOwner', type: 'address' } ], outputs: [], stateMutability: 'nonpayable' }, { type: 'event', name: 'Approval', inputs: [ { name: 'owner', type: 'address', indexed: true }, { name: 'approved', type: 'address', indexed: true }, { name: 'tokenId', type: 'uint256', indexed: true } ], anonymous: false }, { type: 'event', name: 'ApprovalForAll', inputs: [ { name: 'owner', type: 'address', indexed: true }, { name: 'operator', type: 'address', indexed: true }, { name: 'approved', type: 'bool', indexed: false } ], anonymous: false }, { type: 'event', name: 'DungeonCoreAddressUpdated', inputs: [ { name: 'newAddress', type: 'address', indexed: true } ], anonymous: false }, { type: 'event', name: 'OwnershipTransferred', inputs: [ { name: 'previousOwner', type: 'address', indexed: true }, { name: 'newOwner', type: 'address', indexed: true } ], anonymous: false }, { type: 'event', name: 'PartyCreated', inputs: [ { name: 'partyId', type: 'uint256', indexed: true }, { name: 'owner', type: 'address', indexed: true }, { name: 'heroIds', type: 'uint256[]', indexed: false }, { name: 'relicIds', type: 'uint256[]', indexed: false } ], anonymous: false }, { type: 'event', name: 'PartyDisbanded', inputs: [ { name: 'partyId', type: 'uint256', indexed: true }, { name: 'owner', type: 'address', indexed: true } ], anonymous: false }, { type: 'event', name: 'Transfer', inputs: [ { name: 'from', type: 'address', indexed: true }, { name: 'to', type: 'address', indexed: true }, { name: 'tokenId', type: 'uint256', indexed: true } ], anonymous: false } ] as const;
export const dungeonCoreABI = [ { type: 'constructor', inputs: [ { name: '_vrfWrapper', type: 'address' }, { name: '_partyAddress', type: 'address' }, { name: '_soulShardTokenAddress', type: 'address' }, { name: '_usdTokenAddress', type: 'address' }, { name: '_pairAddress', type: 'address' } ], stateMutability: 'nonpayable' }, { type: 'receive', stateMutability: 'payable' }, { type: 'function', name: 'buyProvisions', inputs: [ { name: '_partyId', type: 'uint256' }, { name: '_amount', type: 'uint256' } ], outputs: [], stateMutability: 'nonpayable' }, { type: 'function', name: 'claimRewards', inputs: [ { name: '_partyId', type: 'uint256' } ], outputs: [], stateMutability: 'nonpayable' }, { type: 'function', name: 'dungeons', inputs: [ { name: '', type: 'uint256' } ], outputs: [ { name: 'requiredPower', type: 'uint256' }, { name: 'rewardAmountUSD', type: 'uint256' }, { name: 'baseSuccessRate', type: 'uint8' }, { name: 'isInitialized', type: 'bool' } ], stateMutability: 'view' }, { type: 'function', name: 'explorationFee', inputs: [], outputs: [ { name: '', type: 'uint256' } ], stateMutability: 'view' }, { type: 'function', name: 'fulfillRandomWords', inputs: [ { name: '_requestId', type: 'uint256' }, { name: '_randomWords', type: 'uint256[]' } ], outputs: [], stateMutability: 'nonpayable' }, { type: 'function', name: 'globalRewardMultiplier', inputs: [], outputs: [ { name: '', type: 'uint256' } ], stateMutability: 'view' }, { type: 'function', name: 'isPartyLocked', inputs: [ { name: '_partyId', type: 'uint256' } ], outputs: [ { name: '', type: 'bool' } ], stateMutability: 'view' }, { type: 'function', name: 'owner', inputs: [], outputs: [ { name: '', type: 'address' } ], stateMutability: 'view' }, { type: 'function', name: 'playerInfo', inputs: [ { name: '', type: 'address' } ], outputs: [ { name: 'withdrawableBalance', type: 'uint256' }, { name: 'lastWithdrawTimestamp', type: 'uint256' }, { name: 'isFirstWithdraw', type: 'bool' } ], stateMutability: 'view' }, { type: 'function', name: 'provisionPriceUSD', inputs: [], outputs: [ { name: '', type: 'uint256' } ], stateMutability: 'view' }, { type: 'function', name: 'renounceOwnership', inputs: [], outputs: [], stateMutability: 'nonpayable' }, { type: 'function', name: 'requestExpedition', inputs: [ { name: '_partyId', type: 'uint256' }, { name: '_dungeonId', type: 'uint256' } ], outputs: [ { name: 'requestId', type: 'uint256' } ], stateMutability: 'payable' }, { type: 'function', name: 'setExplorationFee', inputs: [ { name: '_newFee', type: 'uint256' } ], outputs: [], stateMutability: 'nonpayable' }, { type: 'function', name: 'setGlobalRewardMultiplier', inputs: [ { name: '_newMultiplier', type: 'uint256' } ], outputs: [], stateMutability: 'nonpayable' }, { type: 'function', name: 'setProvisionPriceUSD', inputs: [ { name: '_newPrice', type: 'uint256' } ], outputs: [], stateMutability: 'nonpayable' }, { type: 'function', name: 'transferOwnership', inputs: [ { name: 'newOwner', type: 'address' } ], outputs: [], stateMutability: 'nonpayable' }, { type: 'function', name: 'updateDungeon', inputs: [ { name: '_dungeonId', type: 'uint256' }, { name: '_requiredPower', type: 'uint256' }, { name: '_rewardAmountUSD', type: 'uint256' }, { name: '_successRate', type: 'uint8' } ], outputs: [], stateMutability: 'nonpayable' }, { type: 'function', name: 'withdraw', inputs: [ { name: '_amount', type: 'uint256' } ], outputs: [], stateMutability: 'nonpayable' }, { type: 'function', name: 'withdrawNative', inputs: [], outputs: [], stateMutability: 'nonpayable' }, { type: 'function', name: 'withdrawTaxedTokens', inputs: [], outputs: [], stateMutability: 'nonpayable' }, { type: 'event', name: 'DungeonUpdated', inputs: [ { name: 'dungeonId', type: 'uint256', indexed: true }, { name: 'requiredPower', type: 'uint256', indexed: false }, { name: 'rewardAmountUSD', type: 'uint256', indexed: false }, { name: 'baseSuccessRate', type: 'uint8', indexed: false } ], anonymous: false }, { type: 'event', name: 'ExpeditionFulfilled', inputs: [ { name: 'requestId', type: 'uint256', indexed: true }, { name: 'partyId', type: 'uint256', indexed: true }, { name: 'success', type: 'bool', indexed: false }, { name: 'reward', type: 'uint256', indexed: false } ], anonymous: false }, { type: 'event', name: 'ExpeditionRequested', inputs: [ { name: 'requestId', type: 'uint256', indexed: true }, { name: 'partyId', type: 'uint256', indexed: true }, { name: 'dungeonId', type: 'uint256', indexed: true } ], anonymous: false }, { type: 'event', name: 'GlobalRewardMultiplierUpdated', inputs: [ { name: 'newMultiplier', type: 'uint256', indexed: false } ], anonymous: false }, { type: 'event', name: 'OwnershipTransferred', inputs: [ { name: 'previousOwner', type: 'address', indexed: true }, { name: 'newOwner', type: 'address', indexed: true } ], anonymous: false }, { type: 'event', name: 'ProvisionsBought', inputs: [ { name: 'partyId', type: 'uint256', indexed: true }, { name: 'amount', type: 'uint256', indexed: false }, { name: 'cost', type: 'uint256', indexed: false } ], anonymous: false }, { type: 'event', name: 'RewardsBanked', inputs: [ { name: 'user', type: 'address', indexed: true }, { name: 'partyId', type: 'uint256', indexed: true }, { name: 'amount', type: 'uint256', indexed: false } ], anonymous: false }, { type: 'event', name: 'TokensWithdrawn', inputs: [ { name: 'user', type: 'address', indexed: true }, { name: 'amount', type: 'uint256', indexed: false }, { name: 'taxAmount', type: 'uint256', indexed: false } ], anonymous: false } ] as const;