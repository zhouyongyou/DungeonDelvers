# =================================================================
# Player: 玩家是所有數據的中心
# ★ 核心修正：明確標示為可變實體 (immutable: false)
# =================================================================
type Player @entity(immutable: false) {
  "玩家的錢包地址"
  id: Bytes!
  "玩家擁有的所有英雄 (透過 'owner' 欄位反向關聯)"
  heroes: [Hero!]! @derivedFrom(field: "owner")
  "玩家擁有的所有聖物 (反向關聯)"
  relics: [Relic!]! @derivedFrom(field: "owner")
  "玩家擁有的所有隊伍 (反向關聯)"
  parties: [Party!]! @derivedFrom(field: "owner")
  "玩家的個人檔案 (SBT)"
  profile: PlayerProfile @derivedFrom(field: "player")
  "玩家的 VIP 卡 (SBT)"
  vip: VIP @derivedFrom(field: "player")
  "玩家的遊戲內金庫"
  vault: PlayerVault @derivedFrom(field: "player")
  "玩家的所有升星嘗試記錄"
  upgradeAttempts: [UpgradeAttempt!]! @derivedFrom(field: "player")
}

# =================================================================
# NFT 實體
# ★ 核心修正：為創建後就不會改變的實體加上 (immutable: true)
# =================================================================
type Hero @entity(immutable: true) {
  "唯一 ID: 合約地址-TokenID"
  id: ID!
  tokenId: BigInt!
  owner: Player!
  rarity: Int!
  power: BigInt!
  "此英雄所在的隊伍，如果沒有則為 null"
  party: Party
}

type Relic @entity(immutable: true) {
  "唯一 ID: 合約地址-TokenID"
  id: ID!
  tokenId: BigInt!
  owner: Player!
  rarity: Int!
  capacity: Int!
  "此聖物所在的隊伍，如果沒有則為 null"
  party: Party
}

type Party @entity(immutable: false) {
  "唯一 ID: 合約地址-TokenID"
  id: ID!
  tokenId: BigInt!
  owner: Player!
  "隊伍中的英雄列表 (透過 Hero.party 欄位反向關聯)"
  heroes: [Hero!]! @derivedFrom(field: "party")
  "隊伍中的聖物列表 (透過 Relic.party 欄位反向關聯)"
  relics: [Relic!]! @derivedFrom(field: "party")
  totalPower: BigInt!
  totalCapacity: BigInt!
  partyRarity: Int!
  "動態隊伍狀態 (由 DungeonMaster 事件更新)"
  provisionsRemaining: BigInt!
  cooldownEndsAt: BigInt!
  unclaimedRewards: BigInt!
  fatigueLevel: Int!
}

# =================================================================
# SBT (靈魂綁定代幣) 與其他可變實體
# =================================================================
type PlayerProfile @entity(immutable: false) {
  "唯一 ID: 玩家地址 (小寫的十六進制字串)"
  id: ID!
  player: Player!
  tokenId: BigInt!
  experience: BigInt!
  level: Int!
}

type VIP @entity(immutable: false) {
  "唯一 ID: 玩家地址 (小寫的十六進制字串)"
  id: ID!
  player: Player!
  tokenId: BigInt!
  stakedAmount: BigInt!
  level: Int!
}

type PlayerVault @entity(immutable: false) {
  "唯一 ID: 玩家地址 (小寫的十六進制字串)"
  id: ID!
  player: Player!
  withdrawableBalance: BigInt!
  totalCommissionPaid: BigInt!
  referrer: Bytes # 邀請人的地址
}

# ★ 核心修正：升星記錄也是不可變的
type UpgradeAttempt @entity(immutable: true) {
  "唯一 ID: 交易雜湊-日誌索引"
  id: ID!
  player: Player!
  tokenContract: Bytes!
  targetRarity: Int!
  outcome: String! # e.g., GreatSuccess, Success, PartialFailure, TotalFailure
  timestamp: BigInt!
}
