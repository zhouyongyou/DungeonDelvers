// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class Approval extends ethereum.Event {
  get params(): Approval__Params {
    return new Approval__Params(this);
  }
}

export class Approval__Params {
  _event: Approval;

  constructor(event: Approval) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get approved(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class ApprovalForAll extends ethereum.Event {
  get params(): ApprovalForAll__Params {
    return new ApprovalForAll__Params(this);
  }
}

export class ApprovalForAll__Params {
  _event: ApprovalForAll;

  constructor(event: ApprovalForAll) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get operator(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get approved(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }
}

export class DungeonCoreSet extends ethereum.Event {
  get params(): DungeonCoreSet__Params {
    return new DungeonCoreSet__Params(this);
  }
}

export class DungeonCoreSet__Params {
  _event: DungeonCoreSet;

  constructor(event: DungeonCoreSet) {
    this._event = event;
  }

  get newAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class DungeonSvgLibrarySet extends ethereum.Event {
  get params(): DungeonSvgLibrarySet__Params {
    return new DungeonSvgLibrarySet__Params(this);
  }
}

export class DungeonSvgLibrarySet__Params {
  _event: DungeonSvgLibrarySet;

  constructor(event: DungeonSvgLibrarySet) {
    this._event = event;
  }

  get newAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class HeroContractSet extends ethereum.Event {
  get params(): HeroContractSet__Params {
    return new HeroContractSet__Params(this);
  }
}

export class HeroContractSet__Params {
  _event: HeroContractSet;

  constructor(event: HeroContractSet) {
    this._event = event;
  }

  get newAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class OperatorApprovalSet extends ethereum.Event {
  get params(): OperatorApprovalSet__Params {
    return new OperatorApprovalSet__Params(this);
  }
}

export class OperatorApprovalSet__Params {
  _event: OperatorApprovalSet;

  constructor(event: OperatorApprovalSet) {
    this._event = event;
  }

  get operator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get approved(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class PartyCreated extends ethereum.Event {
  get params(): PartyCreated__Params {
    return new PartyCreated__Params(this);
  }
}

export class PartyCreated__Params {
  _event: PartyCreated;

  constructor(event: PartyCreated) {
    this._event = event;
  }

  get partyId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get owner(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get heroIds(): Array<BigInt> {
    return this._event.parameters[2].value.toBigIntArray();
  }

  get relicIds(): Array<BigInt> {
    return this._event.parameters[3].value.toBigIntArray();
  }
}

export class Paused extends ethereum.Event {
  get params(): Paused__Params {
    return new Paused__Params(this);
  }
}

export class Paused__Params {
  _event: Paused;

  constructor(event: Paused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class PlatformFeeSet extends ethereum.Event {
  get params(): PlatformFeeSet__Params {
    return new PlatformFeeSet__Params(this);
  }
}

export class PlatformFeeSet__Params {
  _event: PlatformFeeSet;

  constructor(event: PlatformFeeSet) {
    this._event = event;
  }

  get newFee(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class RelicContractSet extends ethereum.Event {
  get params(): RelicContractSet__Params {
    return new RelicContractSet__Params(this);
  }
}

export class RelicContractSet__Params {
  _event: RelicContractSet;

  constructor(event: RelicContractSet) {
    this._event = event;
  }

  get newAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Transfer extends ethereum.Event {
  get params(): Transfer__Params {
    return new Transfer__Params(this);
  }
}

export class Transfer__Params {
  _event: Transfer;

  constructor(event: Transfer) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Unpaused extends ethereum.Event {
  get params(): Unpaused__Params {
    return new Unpaused__Params(this);
  }
}

export class Unpaused__Params {
  _event: Unpaused;

  constructor(event: Unpaused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Party__getPartyCompositionResultValue0Struct extends ethereum.Tuple {
  get heroIds(): Array<BigInt> {
    return this[0].toBigIntArray();
  }

  get relicIds(): Array<BigInt> {
    return this[1].toBigIntArray();
  }

  get totalPower(): BigInt {
    return this[2].toBigInt();
  }

  get totalCapacity(): BigInt {
    return this[3].toBigInt();
  }

  get partyRarity(): i32 {
    return this[4].toI32();
  }
}

export class Party__partyCompositionsResult {
  value0: BigInt;
  value1: BigInt;
  value2: i32;

  constructor(value0: BigInt, value1: BigInt, value2: i32) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set(
      "value2",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value2)),
    );
    return map;
  }

  getTotalPower(): BigInt {
    return this.value0;
  }

  getTotalCapacity(): BigInt {
    return this.value1;
  }

  getPartyRarity(): i32 {
    return this.value2;
  }
}

export class Party extends ethereum.SmartContract {
  static bind(address: Address): Party {
    return new Party("Party", address);
  }

  balanceOf(owner: Address): BigInt {
    let result = super.call("balanceOf", "balanceOf(address):(uint256)", [
      ethereum.Value.fromAddress(owner),
    ]);

    return result[0].toBigInt();
  }

  try_balanceOf(owner: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("balanceOf", "balanceOf(address):(uint256)", [
      ethereum.Value.fromAddress(owner),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  dungeonCoreContract(): Address {
    let result = super.call(
      "dungeonCoreContract",
      "dungeonCoreContract():(address)",
      [],
    );

    return result[0].toAddress();
  }

  try_dungeonCoreContract(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "dungeonCoreContract",
      "dungeonCoreContract():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  dungeonSvgLibrary(): Address {
    let result = super.call(
      "dungeonSvgLibrary",
      "dungeonSvgLibrary():(address)",
      [],
    );

    return result[0].toAddress();
  }

  try_dungeonSvgLibrary(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "dungeonSvgLibrary",
      "dungeonSvgLibrary():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getApproved(tokenId: BigInt): Address {
    let result = super.call("getApproved", "getApproved(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(tokenId),
    ]);

    return result[0].toAddress();
  }

  try_getApproved(tokenId: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getApproved",
      "getApproved(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(tokenId)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getPartyComposition(
    _partyId: BigInt,
  ): Party__getPartyCompositionResultValue0Struct {
    let result = super.call(
      "getPartyComposition",
      "getPartyComposition(uint256):((uint256[],uint256[],uint256,uint256,uint8))",
      [ethereum.Value.fromUnsignedBigInt(_partyId)],
    );

    return changetype<Party__getPartyCompositionResultValue0Struct>(
      result[0].toTuple(),
    );
  }

  try_getPartyComposition(
    _partyId: BigInt,
  ): ethereum.CallResult<Party__getPartyCompositionResultValue0Struct> {
    let result = super.tryCall(
      "getPartyComposition",
      "getPartyComposition(uint256):((uint256[],uint256[],uint256,uint256,uint8))",
      [ethereum.Value.fromUnsignedBigInt(_partyId)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<Party__getPartyCompositionResultValue0Struct>(
        value[0].toTuple(),
      ),
    );
  }

  heroContract(): Address {
    let result = super.call("heroContract", "heroContract():(address)", []);

    return result[0].toAddress();
  }

  try_heroContract(): ethereum.CallResult<Address> {
    let result = super.tryCall("heroContract", "heroContract():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  isApprovedForAll(owner: Address, operator: Address): boolean {
    let result = super.call(
      "isApprovedForAll",
      "isApprovedForAll(address,address):(bool)",
      [ethereum.Value.fromAddress(owner), ethereum.Value.fromAddress(operator)],
    );

    return result[0].toBoolean();
  }

  try_isApprovedForAll(
    owner: Address,
    operator: Address,
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isApprovedForAll",
      "isApprovedForAll(address,address):(bool)",
      [ethereum.Value.fromAddress(owner), ethereum.Value.fromAddress(operator)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  name(): string {
    let result = super.call("name", "name():(string)", []);

    return result[0].toString();
  }

  try_name(): ethereum.CallResult<string> {
    let result = super.tryCall("name", "name():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  onERC721Received(
    param0: Address,
    param1: Address,
    param2: BigInt,
    param3: Bytes,
  ): Bytes {
    let result = super.call(
      "onERC721Received",
      "onERC721Received(address,address,uint256,bytes):(bytes4)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromAddress(param1),
        ethereum.Value.fromUnsignedBigInt(param2),
        ethereum.Value.fromBytes(param3),
      ],
    );

    return result[0].toBytes();
  }

  try_onERC721Received(
    param0: Address,
    param1: Address,
    param2: BigInt,
    param3: Bytes,
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "onERC721Received",
      "onERC721Received(address,address,uint256,bytes):(bytes4)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromAddress(param1),
        ethereum.Value.fromUnsignedBigInt(param2),
        ethereum.Value.fromBytes(param3),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  ownerOf(tokenId: BigInt): Address {
    let result = super.call("ownerOf", "ownerOf(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(tokenId),
    ]);

    return result[0].toAddress();
  }

  try_ownerOf(tokenId: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall("ownerOf", "ownerOf(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(tokenId),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  partyCompositions(param0: BigInt): Party__partyCompositionsResult {
    let result = super.call(
      "partyCompositions",
      "partyCompositions(uint256):(uint256,uint256,uint8)",
      [ethereum.Value.fromUnsignedBigInt(param0)],
    );

    return new Party__partyCompositionsResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toI32(),
    );
  }

  try_partyCompositions(
    param0: BigInt,
  ): ethereum.CallResult<Party__partyCompositionsResult> {
    let result = super.tryCall(
      "partyCompositions",
      "partyCompositions(uint256):(uint256,uint256,uint8)",
      [ethereum.Value.fromUnsignedBigInt(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Party__partyCompositionsResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toI32(),
      ),
    );
  }

  paused(): boolean {
    let result = super.call("paused", "paused():(bool)", []);

    return result[0].toBoolean();
  }

  try_paused(): ethereum.CallResult<boolean> {
    let result = super.tryCall("paused", "paused():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  platformFee(): BigInt {
    let result = super.call("platformFee", "platformFee():(uint256)", []);

    return result[0].toBigInt();
  }

  try_platformFee(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("platformFee", "platformFee():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  relicContract(): Address {
    let result = super.call("relicContract", "relicContract():(address)", []);

    return result[0].toAddress();
  }

  try_relicContract(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "relicContract",
      "relicContract():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)],
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  symbol(): string {
    let result = super.call("symbol", "symbol():(string)", []);

    return result[0].toString();
  }

  try_symbol(): ethereum.CallResult<string> {
    let result = super.tryCall("symbol", "symbol():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  tokenURI(tokenId: BigInt): string {
    let result = super.call("tokenURI", "tokenURI(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(tokenId),
    ]);

    return result[0].toString();
  }

  try_tokenURI(tokenId: BigInt): ethereum.CallResult<string> {
    let result = super.tryCall("tokenURI", "tokenURI(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(tokenId),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get initialOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ApproveCall extends ethereum.Call {
  get inputs(): ApproveCall__Inputs {
    return new ApproveCall__Inputs(this);
  }

  get outputs(): ApproveCall__Outputs {
    return new ApproveCall__Outputs(this);
  }
}

export class ApproveCall__Inputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }

  get to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ApproveCall__Outputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }
}

export class CreatePartyCall extends ethereum.Call {
  get inputs(): CreatePartyCall__Inputs {
    return new CreatePartyCall__Inputs(this);
  }

  get outputs(): CreatePartyCall__Outputs {
    return new CreatePartyCall__Outputs(this);
  }
}

export class CreatePartyCall__Inputs {
  _call: CreatePartyCall;

  constructor(call: CreatePartyCall) {
    this._call = call;
  }

  get _heroIds(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }

  get _relicIds(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }
}

export class CreatePartyCall__Outputs {
  _call: CreatePartyCall;

  constructor(call: CreatePartyCall) {
    this._call = call;
  }

  get partyId(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class OnERC721ReceivedCall extends ethereum.Call {
  get inputs(): OnERC721ReceivedCall__Inputs {
    return new OnERC721ReceivedCall__Inputs(this);
  }

  get outputs(): OnERC721ReceivedCall__Outputs {
    return new OnERC721ReceivedCall__Outputs(this);
  }
}

export class OnERC721ReceivedCall__Inputs {
  _call: OnERC721ReceivedCall;

  constructor(call: OnERC721ReceivedCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get value1(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get value2(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get value3(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class OnERC721ReceivedCall__Outputs {
  _call: OnERC721ReceivedCall;

  constructor(call: OnERC721ReceivedCall) {
    this._call = call;
  }

  get value0(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class PauseCall extends ethereum.Call {
  get inputs(): PauseCall__Inputs {
    return new PauseCall__Inputs(this);
  }

  get outputs(): PauseCall__Outputs {
    return new PauseCall__Outputs(this);
  }
}

export class PauseCall__Inputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class PauseCall__Outputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SafeTransferFromCall extends ethereum.Call {
  get inputs(): SafeTransferFromCall__Inputs {
    return new SafeTransferFromCall__Inputs(this);
  }

  get outputs(): SafeTransferFromCall__Outputs {
    return new SafeTransferFromCall__Outputs(this);
  }
}

export class SafeTransferFromCall__Inputs {
  _call: SafeTransferFromCall;

  constructor(call: SafeTransferFromCall) {
    this._call = call;
  }

  get from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class SafeTransferFromCall__Outputs {
  _call: SafeTransferFromCall;

  constructor(call: SafeTransferFromCall) {
    this._call = call;
  }
}

export class SafeTransferFrom1Call extends ethereum.Call {
  get inputs(): SafeTransferFrom1Call__Inputs {
    return new SafeTransferFrom1Call__Inputs(this);
  }

  get outputs(): SafeTransferFrom1Call__Outputs {
    return new SafeTransferFrom1Call__Outputs(this);
  }
}

export class SafeTransferFrom1Call__Inputs {
  _call: SafeTransferFrom1Call;

  constructor(call: SafeTransferFrom1Call) {
    this._call = call;
  }

  get from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get data(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class SafeTransferFrom1Call__Outputs {
  _call: SafeTransferFrom1Call;

  constructor(call: SafeTransferFrom1Call) {
    this._call = call;
  }
}

export class SetApprovalForAllCall extends ethereum.Call {
  get inputs(): SetApprovalForAllCall__Inputs {
    return new SetApprovalForAllCall__Inputs(this);
  }

  get outputs(): SetApprovalForAllCall__Outputs {
    return new SetApprovalForAllCall__Outputs(this);
  }
}

export class SetApprovalForAllCall__Inputs {
  _call: SetApprovalForAllCall;

  constructor(call: SetApprovalForAllCall) {
    this._call = call;
  }

  get operator(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get approved(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetApprovalForAllCall__Outputs {
  _call: SetApprovalForAllCall;

  constructor(call: SetApprovalForAllCall) {
    this._call = call;
  }
}

export class SetDungeonCoreCall extends ethereum.Call {
  get inputs(): SetDungeonCoreCall__Inputs {
    return new SetDungeonCoreCall__Inputs(this);
  }

  get outputs(): SetDungeonCoreCall__Outputs {
    return new SetDungeonCoreCall__Outputs(this);
  }
}

export class SetDungeonCoreCall__Inputs {
  _call: SetDungeonCoreCall;

  constructor(call: SetDungeonCoreCall) {
    this._call = call;
  }

  get _coreAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetDungeonCoreCall__Outputs {
  _call: SetDungeonCoreCall;

  constructor(call: SetDungeonCoreCall) {
    this._call = call;
  }
}

export class SetDungeonSvgLibraryCall extends ethereum.Call {
  get inputs(): SetDungeonSvgLibraryCall__Inputs {
    return new SetDungeonSvgLibraryCall__Inputs(this);
  }

  get outputs(): SetDungeonSvgLibraryCall__Outputs {
    return new SetDungeonSvgLibraryCall__Outputs(this);
  }
}

export class SetDungeonSvgLibraryCall__Inputs {
  _call: SetDungeonSvgLibraryCall;

  constructor(call: SetDungeonSvgLibraryCall) {
    this._call = call;
  }

  get _address(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetDungeonSvgLibraryCall__Outputs {
  _call: SetDungeonSvgLibraryCall;

  constructor(call: SetDungeonSvgLibraryCall) {
    this._call = call;
  }
}

export class SetHeroContractCall extends ethereum.Call {
  get inputs(): SetHeroContractCall__Inputs {
    return new SetHeroContractCall__Inputs(this);
  }

  get outputs(): SetHeroContractCall__Outputs {
    return new SetHeroContractCall__Outputs(this);
  }
}

export class SetHeroContractCall__Inputs {
  _call: SetHeroContractCall;

  constructor(call: SetHeroContractCall) {
    this._call = call;
  }

  get _heroAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetHeroContractCall__Outputs {
  _call: SetHeroContractCall;

  constructor(call: SetHeroContractCall) {
    this._call = call;
  }
}

export class SetOperatorApprovalCall extends ethereum.Call {
  get inputs(): SetOperatorApprovalCall__Inputs {
    return new SetOperatorApprovalCall__Inputs(this);
  }

  get outputs(): SetOperatorApprovalCall__Outputs {
    return new SetOperatorApprovalCall__Outputs(this);
  }
}

export class SetOperatorApprovalCall__Inputs {
  _call: SetOperatorApprovalCall;

  constructor(call: SetOperatorApprovalCall) {
    this._call = call;
  }

  get operator(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get approved(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetOperatorApprovalCall__Outputs {
  _call: SetOperatorApprovalCall;

  constructor(call: SetOperatorApprovalCall) {
    this._call = call;
  }
}

export class SetPlatformFeeCall extends ethereum.Call {
  get inputs(): SetPlatformFeeCall__Inputs {
    return new SetPlatformFeeCall__Inputs(this);
  }

  get outputs(): SetPlatformFeeCall__Outputs {
    return new SetPlatformFeeCall__Outputs(this);
  }
}

export class SetPlatformFeeCall__Inputs {
  _call: SetPlatformFeeCall;

  constructor(call: SetPlatformFeeCall) {
    this._call = call;
  }

  get _newFee(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetPlatformFeeCall__Outputs {
  _call: SetPlatformFeeCall;

  constructor(call: SetPlatformFeeCall) {
    this._call = call;
  }
}

export class SetRelicContractCall extends ethereum.Call {
  get inputs(): SetRelicContractCall__Inputs {
    return new SetRelicContractCall__Inputs(this);
  }

  get outputs(): SetRelicContractCall__Outputs {
    return new SetRelicContractCall__Outputs(this);
  }
}

export class SetRelicContractCall__Inputs {
  _call: SetRelicContractCall;

  constructor(call: SetRelicContractCall) {
    this._call = call;
  }

  get _relicAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetRelicContractCall__Outputs {
  _call: SetRelicContractCall;

  constructor(call: SetRelicContractCall) {
    this._call = call;
  }
}

export class TransferFromCall extends ethereum.Call {
  get inputs(): TransferFromCall__Inputs {
    return new TransferFromCall__Inputs(this);
  }

  get outputs(): TransferFromCall__Outputs {
    return new TransferFromCall__Outputs(this);
  }
}

export class TransferFromCall__Inputs {
  _call: TransferFromCall;

  constructor(call: TransferFromCall) {
    this._call = call;
  }

  get from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class TransferFromCall__Outputs {
  _call: TransferFromCall;

  constructor(call: TransferFromCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UnpauseCall extends ethereum.Call {
  get inputs(): UnpauseCall__Inputs {
    return new UnpauseCall__Inputs(this);
  }

  get outputs(): UnpauseCall__Outputs {
    return new UnpauseCall__Outputs(this);
  }
}

export class UnpauseCall__Inputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UnpauseCall__Outputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class WithdrawNativeCall extends ethereum.Call {
  get inputs(): WithdrawNativeCall__Inputs {
    return new WithdrawNativeCall__Inputs(this);
  }

  get outputs(): WithdrawNativeCall__Outputs {
    return new WithdrawNativeCall__Outputs(this);
  }
}

export class WithdrawNativeCall__Inputs {
  _call: WithdrawNativeCall;

  constructor(call: WithdrawNativeCall) {
    this._call = call;
  }
}

export class WithdrawNativeCall__Outputs {
  _call: WithdrawNativeCall;

  constructor(call: WithdrawNativeCall) {
    this._call = call;
  }
}
