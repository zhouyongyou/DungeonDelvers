// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class CommissionPaid extends ethereum.Event {
  get params(): CommissionPaid__Params {
    return new CommissionPaid__Params(this);
  }
}

export class CommissionPaid__Params {
  _event: CommissionPaid;

  constructor(event: CommissionPaid) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get referrer(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Deposited extends ethereum.Event {
  get params(): Deposited__Params {
    return new Deposited__Params(this);
  }
}

export class Deposited__Params {
  _event: Deposited;

  constructor(event: Deposited) {
    this._event = event;
  }

  get player(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class DungeonCoreSet extends ethereum.Event {
  get params(): DungeonCoreSet__Params {
    return new DungeonCoreSet__Params(this);
  }
}

export class DungeonCoreSet__Params {
  _event: DungeonCoreSet;

  constructor(event: DungeonCoreSet) {
    this._event = event;
  }

  get newAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class GameSpending extends ethereum.Event {
  get params(): GameSpending__Params {
    return new GameSpending__Params(this);
  }
}

export class GameSpending__Params {
  _event: GameSpending;

  constructor(event: GameSpending) {
    this._event = event;
  }

  get player(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get spender(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class ReferralSet extends ethereum.Event {
  get params(): ReferralSet__Params {
    return new ReferralSet__Params(this);
  }
}

export class ReferralSet__Params {
  _event: ReferralSet;

  constructor(event: ReferralSet) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get referrer(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class SoulShardTokenSet extends ethereum.Event {
  get params(): SoulShardTokenSet__Params {
    return new SoulShardTokenSet__Params(this);
  }
}

export class SoulShardTokenSet__Params {
  _event: SoulShardTokenSet;

  constructor(event: SoulShardTokenSet) {
    this._event = event;
  }

  get newAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class TaxParametersUpdated extends ethereum.Event {
  get params(): TaxParametersUpdated__Params {
    return new TaxParametersUpdated__Params(this);
  }
}

export class TaxParametersUpdated__Params {
  _event: TaxParametersUpdated;

  constructor(event: TaxParametersUpdated) {
    this._event = event;
  }

  get standardRate(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get largeRate(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get decreaseRate(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get period(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class WithdrawThresholdsUpdated extends ethereum.Event {
  get params(): WithdrawThresholdsUpdated__Params {
    return new WithdrawThresholdsUpdated__Params(this);
  }
}

export class WithdrawThresholdsUpdated__Params {
  _event: WithdrawThresholdsUpdated;

  constructor(event: WithdrawThresholdsUpdated) {
    this._event = event;
  }

  get smallAmount(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get largeAmount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Withdrawn extends ethereum.Event {
  get params(): Withdrawn__Params {
    return new Withdrawn__Params(this);
  }
}

export class Withdrawn__Params {
  _event: Withdrawn;

  constructor(event: Withdrawn) {
    this._event = event;
  }

  get player(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get taxAmount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class PlayerVault__playerInfoResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;

  constructor(value0: BigInt, value1: BigInt, value2: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    return map;
  }

  getWithdrawableBalance(): BigInt {
    return this.value0;
  }

  getLastWithdrawTimestamp(): BigInt {
    return this.value1;
  }

  getLastFreeWithdrawTimestamp(): BigInt {
    return this.value2;
  }
}

export class PlayerVault extends ethereum.SmartContract {
  static bind(address: Address): PlayerVault {
    return new PlayerVault("PlayerVault", address);
  }

  PERCENT_DIVISOR(): BigInt {
    let result = super.call(
      "PERCENT_DIVISOR",
      "PERCENT_DIVISOR():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_PERCENT_DIVISOR(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "PERCENT_DIVISOR",
      "PERCENT_DIVISOR():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  USD_DECIMALS(): BigInt {
    let result = super.call("USD_DECIMALS", "USD_DECIMALS():(uint256)", []);

    return result[0].toBigInt();
  }

  try_USD_DECIMALS(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("USD_DECIMALS", "USD_DECIMALS():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  commissionRate(): BigInt {
    let result = super.call("commissionRate", "commissionRate():(uint256)", []);

    return result[0].toBigInt();
  }

  try_commissionRate(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "commissionRate",
      "commissionRate():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  decreaseRatePerPeriod(): BigInt {
    let result = super.call(
      "decreaseRatePerPeriod",
      "decreaseRatePerPeriod():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_decreaseRatePerPeriod(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "decreaseRatePerPeriod",
      "decreaseRatePerPeriod():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  dungeonCore(): Address {
    let result = super.call("dungeonCore", "dungeonCore():(address)", []);

    return result[0].toAddress();
  }

  try_dungeonCore(): ethereum.CallResult<Address> {
    let result = super.tryCall("dungeonCore", "dungeonCore():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getTotalCommissionPaid(_user: Address): BigInt {
    let result = super.call(
      "getTotalCommissionPaid",
      "getTotalCommissionPaid(address):(uint256)",
      [ethereum.Value.fromAddress(_user)],
    );

    return result[0].toBigInt();
  }

  try_getTotalCommissionPaid(_user: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getTotalCommissionPaid",
      "getTotalCommissionPaid(address):(uint256)",
      [ethereum.Value.fromAddress(_user)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  largeWithdrawInitialRate(): BigInt {
    let result = super.call(
      "largeWithdrawInitialRate",
      "largeWithdrawInitialRate():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_largeWithdrawInitialRate(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "largeWithdrawInitialRate",
      "largeWithdrawInitialRate():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  largeWithdrawThresholdUSD(): BigInt {
    let result = super.call(
      "largeWithdrawThresholdUSD",
      "largeWithdrawThresholdUSD():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_largeWithdrawThresholdUSD(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "largeWithdrawThresholdUSD",
      "largeWithdrawThresholdUSD():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  periodDuration(): BigInt {
    let result = super.call("periodDuration", "periodDuration():(uint256)", []);

    return result[0].toBigInt();
  }

  try_periodDuration(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "periodDuration",
      "periodDuration():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  playerInfo(param0: Address): PlayerVault__playerInfoResult {
    let result = super.call(
      "playerInfo",
      "playerInfo(address):(uint256,uint256,uint256)",
      [ethereum.Value.fromAddress(param0)],
    );

    return new PlayerVault__playerInfoResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt(),
    );
  }

  try_playerInfo(
    param0: Address,
  ): ethereum.CallResult<PlayerVault__playerInfoResult> {
    let result = super.tryCall(
      "playerInfo",
      "playerInfo(address):(uint256,uint256,uint256)",
      [ethereum.Value.fromAddress(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new PlayerVault__playerInfoResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt(),
      ),
    );
  }

  referrers(param0: Address): Address {
    let result = super.call("referrers", "referrers(address):(address)", [
      ethereum.Value.fromAddress(param0),
    ]);

    return result[0].toAddress();
  }

  try_referrers(param0: Address): ethereum.CallResult<Address> {
    let result = super.tryCall("referrers", "referrers(address):(address)", [
      ethereum.Value.fromAddress(param0),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  smallWithdrawThresholdUSD(): BigInt {
    let result = super.call(
      "smallWithdrawThresholdUSD",
      "smallWithdrawThresholdUSD():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_smallWithdrawThresholdUSD(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "smallWithdrawThresholdUSD",
      "smallWithdrawThresholdUSD():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  soulShardToken(): Address {
    let result = super.call("soulShardToken", "soulShardToken():(address)", []);

    return result[0].toAddress();
  }

  try_soulShardToken(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "soulShardToken",
      "soulShardToken():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  standardInitialRate(): BigInt {
    let result = super.call(
      "standardInitialRate",
      "standardInitialRate():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_standardInitialRate(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "standardInitialRate",
      "standardInitialRate():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  totalCommissionPaid(param0: Address): BigInt {
    let result = super.call(
      "totalCommissionPaid",
      "totalCommissionPaid(address):(uint256)",
      [ethereum.Value.fromAddress(param0)],
    );

    return result[0].toBigInt();
  }

  try_totalCommissionPaid(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "totalCommissionPaid",
      "totalCommissionPaid(address):(uint256)",
      [ethereum.Value.fromAddress(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get initialOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class DepositCall extends ethereum.Call {
  get inputs(): DepositCall__Inputs {
    return new DepositCall__Inputs(this);
  }

  get outputs(): DepositCall__Outputs {
    return new DepositCall__Outputs(this);
  }
}

export class DepositCall__Inputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }

  get _player(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class DepositCall__Outputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetCommissionRateCall extends ethereum.Call {
  get inputs(): SetCommissionRateCall__Inputs {
    return new SetCommissionRateCall__Inputs(this);
  }

  get outputs(): SetCommissionRateCall__Outputs {
    return new SetCommissionRateCall__Outputs(this);
  }
}

export class SetCommissionRateCall__Inputs {
  _call: SetCommissionRateCall;

  constructor(call: SetCommissionRateCall) {
    this._call = call;
  }

  get _newRate(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetCommissionRateCall__Outputs {
  _call: SetCommissionRateCall;

  constructor(call: SetCommissionRateCall) {
    this._call = call;
  }
}

export class SetDungeonCoreCall extends ethereum.Call {
  get inputs(): SetDungeonCoreCall__Inputs {
    return new SetDungeonCoreCall__Inputs(this);
  }

  get outputs(): SetDungeonCoreCall__Outputs {
    return new SetDungeonCoreCall__Outputs(this);
  }
}

export class SetDungeonCoreCall__Inputs {
  _call: SetDungeonCoreCall;

  constructor(call: SetDungeonCoreCall) {
    this._call = call;
  }

  get _newAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetDungeonCoreCall__Outputs {
  _call: SetDungeonCoreCall;

  constructor(call: SetDungeonCoreCall) {
    this._call = call;
  }
}

export class SetReferrerCall extends ethereum.Call {
  get inputs(): SetReferrerCall__Inputs {
    return new SetReferrerCall__Inputs(this);
  }

  get outputs(): SetReferrerCall__Outputs {
    return new SetReferrerCall__Outputs(this);
  }
}

export class SetReferrerCall__Inputs {
  _call: SetReferrerCall;

  constructor(call: SetReferrerCall) {
    this._call = call;
  }

  get _referrer(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetReferrerCall__Outputs {
  _call: SetReferrerCall;

  constructor(call: SetReferrerCall) {
    this._call = call;
  }
}

export class SetSoulShardTokenCall extends ethereum.Call {
  get inputs(): SetSoulShardTokenCall__Inputs {
    return new SetSoulShardTokenCall__Inputs(this);
  }

  get outputs(): SetSoulShardTokenCall__Outputs {
    return new SetSoulShardTokenCall__Outputs(this);
  }
}

export class SetSoulShardTokenCall__Inputs {
  _call: SetSoulShardTokenCall;

  constructor(call: SetSoulShardTokenCall) {
    this._call = call;
  }

  get _newAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetSoulShardTokenCall__Outputs {
  _call: SetSoulShardTokenCall;

  constructor(call: SetSoulShardTokenCall) {
    this._call = call;
  }
}

export class SetTaxParametersCall extends ethereum.Call {
  get inputs(): SetTaxParametersCall__Inputs {
    return new SetTaxParametersCall__Inputs(this);
  }

  get outputs(): SetTaxParametersCall__Outputs {
    return new SetTaxParametersCall__Outputs(this);
  }
}

export class SetTaxParametersCall__Inputs {
  _call: SetTaxParametersCall;

  constructor(call: SetTaxParametersCall) {
    this._call = call;
  }

  get _standardRate(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _largeRate(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _decreaseRate(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _period(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class SetTaxParametersCall__Outputs {
  _call: SetTaxParametersCall;

  constructor(call: SetTaxParametersCall) {
    this._call = call;
  }
}

export class SetWithdrawThresholdsCall extends ethereum.Call {
  get inputs(): SetWithdrawThresholdsCall__Inputs {
    return new SetWithdrawThresholdsCall__Inputs(this);
  }

  get outputs(): SetWithdrawThresholdsCall__Outputs {
    return new SetWithdrawThresholdsCall__Outputs(this);
  }
}

export class SetWithdrawThresholdsCall__Inputs {
  _call: SetWithdrawThresholdsCall;

  constructor(call: SetWithdrawThresholdsCall) {
    this._call = call;
  }

  get _smallUSD(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _largeUSD(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetWithdrawThresholdsCall__Outputs {
  _call: SetWithdrawThresholdsCall;

  constructor(call: SetWithdrawThresholdsCall) {
    this._call = call;
  }
}

export class SpendForGameCall extends ethereum.Call {
  get inputs(): SpendForGameCall__Inputs {
    return new SpendForGameCall__Inputs(this);
  }

  get outputs(): SpendForGameCall__Outputs {
    return new SpendForGameCall__Outputs(this);
  }
}

export class SpendForGameCall__Inputs {
  _call: SpendForGameCall;

  constructor(call: SpendForGameCall) {
    this._call = call;
  }

  get _player(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SpendForGameCall__Outputs {
  _call: SpendForGameCall;

  constructor(call: SpendForGameCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class WithdrawCall extends ethereum.Call {
  get inputs(): WithdrawCall__Inputs {
    return new WithdrawCall__Inputs(this);
  }

  get outputs(): WithdrawCall__Outputs {
    return new WithdrawCall__Outputs(this);
  }
}

export class WithdrawCall__Inputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class WithdrawCall__Outputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }
}

export class WithdrawGameRevenueCall extends ethereum.Call {
  get inputs(): WithdrawGameRevenueCall__Inputs {
    return new WithdrawGameRevenueCall__Inputs(this);
  }

  get outputs(): WithdrawGameRevenueCall__Outputs {
    return new WithdrawGameRevenueCall__Outputs(this);
  }
}

export class WithdrawGameRevenueCall__Inputs {
  _call: WithdrawGameRevenueCall;

  constructor(call: WithdrawGameRevenueCall) {
    this._call = call;
  }

  get amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class WithdrawGameRevenueCall__Outputs {
  _call: WithdrawGameRevenueCall;

  constructor(call: WithdrawGameRevenueCall) {
    this._call = call;
  }
}
