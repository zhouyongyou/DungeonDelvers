問題根源
從您的截圖可以看到，所有待提交的檔案路徑都是 DDgraphql/dungeon-delvers/data/...。這表示 Git 正在追蹤 data 這個資料夾。這是因為您專案根目錄的 .gitignore 檔案中，沒有告訴 Git 要忽略這個特定的資料夾。

步驟一：更新您的 .gitignore 檔案
請將以下完整的內容，複製並完全覆蓋您專案根目錄下的 .gitignore 檔案。我在您原有的基礎上，新增了忽略 The Graph 本機數據資料夾的規則。

# =======================================================================
# 檔案: .gitignore
# 說明: 告訴 Git 哪些檔案或資料夾不需要納入版本控制。
# 適用於: React (Vite) + TypeScript + Solidity (The Graph/Hardhat)
# =======================================================================

### The Graph CLI 產物
# 由 'graph codegen' 指令自動生成
generated/
build/

# ★★★【新增規則】★★★
# 忽略 The Graph 在本機 docker 環境中產生的數據，
# 這包括了 IPFS 和 Postgres 資料庫的檔案。
DDgraphql/dungeon-delvers/data/

### 依賴 (Dependencies)
# 絕不能將 node_modules 上傳到 Git。這個資料夾體積龐大，
# 任何人在 clone 專案後都可以透過 `npm install` 重新安裝。
node_modules/
jspm_packages/

### 前端建構輸出 (Build Output)
# `npm run build` 指令產生的打包檔案
dist/

### 日誌檔 (Logs)
# 開發過程中產生的各種日誌檔
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*

### 環境變數 (Environment Variables) - 極度重要！
# 您的 .env 檔案中會包含私鑰、RPC URL 等敏感資訊，
# 絕對不能上傳到公開的 GitHub。
.env
.env.local
.env.development
.env.test
.env.production
.env.*
.env.*.local

### 快取與臨時檔案 (Cache & Temp)
.vite/
.npm
.eslintcache

### 編輯器與系統檔案 (Editor & System Files)
.DS_Store
.vscode/
Thumbs.db

### 智慧合約與測試工具 (Smart Contract & Testing Tools)
# Hardhat 或 Foundry 等工具產生的快取和 artifact 檔案
artifacts/
cache/
coverage/
coverage.json

# Typechain 產生的型別檔案
typechain/
typechain-types/
