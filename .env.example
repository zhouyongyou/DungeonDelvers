# =================================================================
# DungeonDelvers 前端環境變量範例
# 請複製此文件為 .env 並填入實際的值
# 注意：Vite 需要所有變量以 VITE_ 開頭
# =================================================================

# ⚠️ RPC 配置說明：
# 1. 本地開發：使用 VITE_ALCHEMY_KEY 或 VITE_ALCHEMY_KEY_N
# 2. Vercel 生產環境：使用 ALCHEMY_API_KEY_N（不加 VITE_ 前綴）
# 3. 系統支持多個 API key 輪換使用，以分散請求負載

# The Graph API
# VITE_THEGRAPH_API_URL="https://api.studio.thegraph.com/query/115633/dungeon-delvers/version/latest"
# VITE_THE_GRAPH_API_URL="https://api.studio.thegraph.com/query/115633/dungeon-delvers/version/latest"
# VITE_THE_GRAPH_STUDIO_API_URL="https://api.studio.thegraph.com/query/115633/dungeon-delvers/version/latest"

# 網站 URL
VITE_MAINNET_URL="https://dungeondelvers.xyz"

# 開發者地址
# VITE_DEVELOPER_ADDRESS="0x你的錢包地址"

# =================================================================
# 遊戲合約地址（從合約部署獲得）
# =================================================================

VITE_MAINNET_ORACLE_ADDRESS=
VITE_MAINNET_DUNGEONSTORAGE_ADDRESS=
VITE_MAINNET_PLAYERVAULT_ADDRESS=
VITE_MAINNET_ALTAROFASCENSION_ADDRESS=
VITE_MAINNET_DUNGEONMASTER_ADDRESS=
VITE_MAINNET_HERO_ADDRESS=
VITE_MAINNET_RELIC_ADDRESS=
VITE_MAINNET_PARTY_ADDRESS=
VITE_MAINNET_VIPSTAKING_ADDRESS=
VITE_MAINNET_PLAYERPROFILE_ADDRESS=
VITE_MAINNET_DUNGEONCORE_ADDRESS=

# =================================================================
# 代幣地址（已部署的）
# =================================================================

VITE_MAINNET_SOUL_SHARD_TOKEN_ADDRESS="0xc88dAD283Ac209D77Bfe452807d378615AB8B94a"
VITE_MAINNET_USD_TOKEN_ADDRESS="0x7C67Af4EBC6651c95dF78De11cfe325660d935FE"
VITE_MAINNET_POOL_ADDRESS="0x737c5b0430d5aeb104680460179aaa38608b6169"

# =================================================================
# 後端服務
# =================================================================

VITE_METADATA_SERVER_URL="https://dungeon-delvers-metadata-server.onrender.com"

# =================================================================
# 第三方服務
# =================================================================

# WalletConnect Project ID
# VITE_WALLET_CONNECT_PROJECT_ID="YOUR_WALLETCONNECT_PROJECT_ID"

# =================================================================
# RPC 節點配置 - 混合策略
# =================================================================

# 混合 RPC 策略說明：
# 1. 公開節點：用於實時查詢，可以暴露
# 2. 私有節點：通過代理保護，用於敏感操作和批量查詢
# 3. 子圖：用於歷史數據和統計（優先使用）

# 公開的 Alchemy Key（可以暴露，用於實時查詢）
# VITE_ALCHEMY_KEY_PUBLIC="YOUR_PUBLIC_ALCHEMY_KEY"

# 本地開發環境配置示例：
# VITE_ALCHEMY_KEY="YOUR_ALCHEMY_API_KEY"
# 
# 或使用多個 key 進行負載均衡：
# VITE_ALCHEMY_KEY_1="YOUR_FIRST_API_KEY"    # 如果沒有 PUBLIC，這個會作為公開 key
# VITE_ALCHEMY_KEY_2="YOUR_SECOND_API_KEY"   # 通過代理保護
# VITE_ALCHEMY_KEY_3="YOUR_THIRD_API_KEY"    # 通過代理保護
# VITE_ALCHEMY_KEY_4="YOUR_FOURTH_API_KEY"   # 通過代理保護
# VITE_ALCHEMY_KEY_5="YOUR_FIFTH_API_KEY"    # 通過代理保護

# 生產環境（Vercel）配置說明：
# 在 Vercel 環境變數中設置（不要加 VITE_ 前綴）：
# VITE_ALCHEMY_KEY_PUBLIC="YOUR_PUBLIC_KEY"  # 這個會暴露給客戶端
# ALCHEMY_API_KEY_1="PROTECTED_KEY_1"       # 不會被設為公開 key
# ALCHEMY_API_KEY_2="PROTECTED_KEY_2"       # 通過代理保護
# ALCHEMY_API_KEY_3="PROTECTED_KEY_3"       # 通過代理保護
# ALCHEMY_API_KEY_4="PROTECTED_KEY_4"       # 通過代理保護
# ALCHEMY_API_KEY_5="PROTECTED_KEY_5"       # 通過代理保護

# 注意事項：
# 1. VITE_ALCHEMY_KEY_PUBLIC 會暴露在客戶端，請使用專門的受限 key
# 2. 其他 keys 通過 /api/rpc 代理保護，不會暴露
# 3. 系統會根據請求類型智能選擇使用哪個數據源
# 4. 如果沒有配置任何 key，系統會使用公共 RPC 節點作為後備